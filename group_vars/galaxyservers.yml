# alle Default Konfigurationen kann man unter /galaxy/roles/galaxyproject.galaxy/defaults/main.yml eingesehen werden, das hilft Veraenderungen zu machen bzw. zu sehen was passiert wenn man nichts konfiguriert 
galaxy_client_make_target: client-production-maps # in einer anderen Alternative kann dieser Wert auf Null (das Wort ohne Anführungszeichen) gesetzt werden
galaxy_client_node_env: production # in einer anderen Alternative kann dieser Wert auf development (das Wort ohne Anführungszeichen) gesetzt werden
# galaxy_client_force_build: true    # damit könnte der Client neu gebaut werden, wenn das Web nicht funktioniert, sonst wird dieser Task uebersprungen

# Galaxy
galaxy_create_user: true # False by default, as e.g. you might have a 'galaxy' user provided by LDAP or AD.
galaxy_separate_privileges: true # Best practices for security, configuration is owned by 'root' (or a different user) than the processes
galaxy_manage_paths: true # False by default as your administrator might e.g. have root_squash enabled on NFS. Here we can create the directories so it's fine.
galaxy_layout: root-dir
galaxy_root: /srv/galaxy
galaxy_user: {name: "{{ galaxy_user_name }}", shell: /bin/bash}
galaxy_commit_id: release_24.1
galaxy_force_checkout: true
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"
miniconda_version: 24.9.2
miniconda_channels: ['conda-forge','bioconda','defaults']

galaxy_job_config:
  runners:
    local_runner:
      load: galaxy.jobs.runners.local:LocalJobRunner
      workers: 4
  handling:
    assign: ['db-skip-locked']
  execution:
    #default: local_env   # wurde deaktiviert für Benutzung von Apptainer
    default: singularity  # wurde aktiviert für apptainer
    environments:
      local_env:
        runner: local_runner
        tmp_dir: true
      singularity:         #diese einstellungen bis 45 sind fuer Apptainer
        runner: local_runner
        singularity_enabled: true
        env:
        # Ensuring a consistent collation environment is good for reproducibility.
        - name: LC_ALL
          value: C
        # The cache directory holds the docker containers that get converted
        - name: APPTAINER_CACHEDIR
          value: /tmp/singularity
        # Apptainer uses a temporary directory to build the squashfs filesystem
        - name: APPTAINER_TMPDIR
          value: /tmp

  tools:
    - class: local # these special tools that aren't parameterized for remote execution - expression tools, upload, etc
      environment: local_env
      
galaxy_config:
  galaxy:
    #Branding
    brand: Molekulare Pflanzenernährung und Biochemie der Pflanze
    logo_src: "https://training.galaxyproject.org/training-material/topics/admin/tutorials/customization/images/logo.png"
    themes_config_file: "{{ galaxy_config_dir }}/themes.yml"
    #Enables Web 
    static_enabled: true
    # Main Configuration
    admin_users: 
    - mherde@pflern.uni-hannover.de
    database_connection: "postgresql:///{{ galaxy_db_name }}?host=/var/run/postgresql"
    file_path: /data/datasets
    job_working_directory: /data/jobs
    object_store_store_by: uuid
    id_secret: "{{ vault_id_secret }}"
    job_config: "{{ galaxy_job_config }}" # Use the variable we defined above
    # SQL Performance
    slow_query_log_threshold: 5
    enable_per_request_sql_debugging: true
    database_engine_option_server_side_cursors: true
    # File serving Performance
    watch_job_rules: 'auto'
    allow_path_paste: true
    enable_quotas: true
    allow_user_creation: true
    allow_user_deletion: true
    show_welcome_with_login: true
    require_login: true
    expose_user_name: true
    expose_dataset_path: true
    expose_potentially_sensitive_job_metrics: true
    # NFS workarounds
    retry_job_output_collection: 3
    # Debugging
    cleanup_job: always
    allow_user_impersonation: true
    # Tool security
    outputs_to_working_directory: true
    new_user_dataset_access_role_default_private: true # Make datasets private by default
    # fuer Library Funktionalität
    library_import_dir: /libraries/admin
    user_library_import_dir: /libraries/user 
    user_library_import_dir_auto_creation: true
    # Tool Dependencies
    dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
    container_resolvers_config_file: "{{ galaxy_config_dir }}/container_resolvers_conf.yml"
    # vom alten Server übernommen
    debug: false
    log_level: DEBUG
    tool_enable_ngram_search: true  #erlaubt mismatches in der Tool suche
    upload_from_form_button: true  # tested
    allow_user_dataset_purge: true
    show_user_prepopulate_form: true
    preserve_python_environment: legacy_and_local
       
  gravity:
    app_server: gunicorn
    process_manager: systemd
    galaxy_root: "{{ galaxy_root }}/server"
    galaxy_user: "{{ galaxy_user_name }}"
    virtualenv: "{{ galaxy_venv_dir }}"
    gunicorn:
      enable: true
      # listening options
      bind: "130.75.197.65:8080" # das muss entsprechend umgestellt werden der grosse Server hat 130.75.197.106:8080
      # performance options
      workers: 2     # muss beim grossen Server auf 12 gestellt werden
      # Other options that will be passed to gunicorn
      # This permits setting of 'secure' headers like REMOTE_USER (and friends)
      # https://docs.gunicorn.org/en/stable/settings.html#forwarded-allow-ips
      # extra_args: '--forwarded-allow-ips="*"'
      # This lets Gunicorn start Galaxy completely before forking which is faster.
      # https://docs.gunicorn.org/en/stable/settings.html#preload-app
      preload: true
      
    celery:
      concurrency: 2
      loglevel: DEBUG
      broker_connection_retry_on_startup: true
    handlers:
      handler:
        processes: 2
        pools:
          - job-handlers
          - workflow-schedulers
   
galaxy_config_templates:
  - src: templates/galaxy/config/container_resolvers_conf.yml.j2
    dest: "{{ galaxy_config.galaxy.container_resolvers_config_file }}"
  - src: templates/galaxy/config/dependency_resolvers_conf.xml
    dest: "{{ galaxy_config.galaxy.dependency_resolvers_config_file }}"

galaxy_extra_dirs:
  - /data
  - /libraries/admin            # ohne dass diese Folder gemacht werden startet der Web service nicht im tutorial nicht erwaehnt
  - /libraries/user             # ohne dass diese Folder gemacht werden startet der Web service nicht im tutorial nicht erwaehnt
  
galaxy_config_files_public:
  - src: files/galaxy/welcome.html
    dest: "{{ galaxy_root }}/server/static/welcome.html"
  - src: files/galaxy/Datenanalyse2.jpg
    dest: "{{ galaxy_root }}/server/static/Datenanalyse2.jpg"
  - src: files/galaxy/luh_logo.svg
    dest: "{{ galaxy_root }}/server/static/luh_logo.svg"  
    
galaxy_config_files:
  - src: files/galaxy/themes.yml
    dest: "{{ galaxy_config.galaxy.themes_config_file }}"

  
 
